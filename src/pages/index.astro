---
import { getCollection } from 'astro:content'
import DefaultLayout from '../layouts/DefaultLayout.astro'
import Hero from '../components/Hero.astro'
import Feature from '../components/Feature.astro'
import SectionContainer from '../components/SectionContainer.astro'
import HandoutItem from '../components/HandoutItem.astro'

interface IScheduleItem {
  content: string
  time: string
  note: string
}

const schedules: [string, IScheduleItem[]][] = [
  [
    'Web 基础',
    [
      { content: 'HTML & CSS 基础', time: 'April 3rd', note: '🟢' },
      { content: '网站部署实践', time: 'April 13th', note: '🟢' },
    ],
  ],
  [
    'JS 前端框架',
    [
      { content: 'Javascript 语法基础及 DOM 操作', time: 'April 24th', note: '🟢' },
      { content: 'Vue.js 基础', time: 'May 18th', note: '👋好久不见！' },
    ],
  ],
  [
    '后端应用开发',
    [
      { content: '后端基本组件及 Django 基础 I', time: 'May 25th', note: '🟢' },
      { content: 'Django 基础 II', time: 'June 1st', note: '🟢' },
    ],
  ],
  [
    '周边商城项目',
    [
      { content: '商品概览页、购物车页面开发', time: 'May 29th', note: '🟢' },
      { content: '后端开发及 API 接入', time: 'June 5th', note: '' },
    ],
  ],
]

const handoutCollection = await getCollection('handout')
const chapterCollection = await getCollection('chapter')
const tagCollection = await getCollection('tag')
---

<DefaultLayout title="">
  <Hero />

  <SectionContainer title="课程内容" id="features">
    <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
      <Feature icon="mdi:language-html5" title="Web 基础">用 HTML 和 CSS 搭建炫酷的网页，你也可以！</Feature>
      <Feature icon="mdi:vuejs" title="JS 前端框架">哎哎，你这网页怎么会动！一起飞向前端的大坑！</Feature>
      <Feature icon="mdi:server-network-outline" title="后端应用开发">
        好看的前端背后未必是有趣的灵魂，也有可能是凶猛的蟒蛇！高并发、分布式...真正的考验才刚刚开始...
      </Feature>
    </div>
  </SectionContainer>

  <SectionContainer title="课程大纲" id="syllabus">
    <div class="rounded-lg dark:bg-neutral-800 dark:text-neutral-200">
      <table class="table-auto border-collapse rounded-lg bg-neutral-100 dark:bg-neutral-800">
        <thead class="text-left text-lg text-neutral-700 dark:text-neutral-200">
          <tr>
            {
              ['章节', '内容', '时间', '备注'].map((item) => (
                <th class="border-b p-4 pb-3 font-bold dark:border-neutral-600 lg:p-6">{item}</th>
              ))
            }
          </tr>
        </thead>

        <tbody>
          {
            schedules.map(([chapter, chapterSchedules], chIndex) =>
              chapterSchedules.map(({ content, time, note }, index) => (
                <tr
                  class={`${
                    index === chapterSchedules.length - 1 &&
                    chIndex !== schedules.length - 1 &&
                    'border-b border-b-neutral-200 dark:border-b-neutral-700'
                  }`}
                >
                  {index === 0 && (
                    <td class="p-4 lg:p-6" rowspan={chapterSchedules.length}>
                      {chapter}
                    </td>
                  )}
                  <td class="p-4 lg:p-6">{content}</td>
                  <td class="p-4 lg:p-6">{time || '待定'}</td>
                  <td class="p-4 lg:p-6">{note || '无'}</td>
                </tr>
              ))
            )
          }
        </tbody>
      </table>
    </div>
  </SectionContainer>

  <SectionContainer title="课程文档" id="handouts">
    <div>
      {
        chapterCollection.map((chapter) => (
          <>
            <h3 class="mb-8 mt-14 text-5xl">{chapter.data.name}</h3>
            <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
              {handoutCollection
                .filter((item) => item.data.chapter.id === chapter.id)
                .map((handout) => (
                  <HandoutItem
                    icon={handout.data.icon}
                    title={handout.data.title}
                    thumbnail={handout.data.thumbnail}
                    href={`/handouts/${chapterCollection.find((ch) => ch.id === handout.data.chapter.id)!.data.slug}/${
                      handout.slug
                    }`}
                    tags={handout.data.tags?.map((item) => tagCollection.find((tag) => tag.id === item.id)) || []}
                  >
                    {handout.data.description}
                  </HandoutItem>
                ))}
            </div>
          </>
        ))
      }
    </div>
  </SectionContainer>
</DefaultLayout>
